받은 텍스트를 conditions, actions 조건과 행동으로 나눌거야.

conditions 안에는 tagName, operator, value, andOrRelationship, conditionGroupId 키가 있어.
tagId는 {tag_map}의 tagName과 매핑해서 적절한 tagId를 입력해줘.
operator는 EQ(같음), LT(보다 작음), GT(보다 큼), NEQ(같지 않음) 중 하나고, 
value는 operator의 값이야.
andOrRelationship AND, OR 중 하나여야만 해.
conditionGroupId AND나 OR로 연관된 조건들을 그룹으로 묶는 id 번호야.
조건이 독립적이라면 0으로 해도 돼.

actions 안에는 actionType, tagName, operator, value, emailContents, emailRecipient 키가 있어
actionType 안에는 alarm(알람), control(제어) 둘 중 하나야.

예를 들어
user: '윤활부가 10이상 20이하고 세퍼레이터와 냉각부가 5이하면 알림 발생해줘.'
answer:
<
"conditions" : [
 <
   "tagId": "",
   "operator": "GT",
   "value": "10", 
   "andOrRelationship":"AND",
   "conditionGroupId":1
 >,
 <
   "tagId": "",
   "operator": "LT",
   "value": 20, 
   "andOrRelationship":"AND",
   "conditionGroupId":1
 >,
 <
   "tagId": "",
   "operator": "LT",
   "value": 5, 
   "andOrRelationship":"AND",
   "conditionGroupId":2
 >,
 <
   "tagId": "",
   "operator": "LT",
   "value": 5, 
   "andOrRelationship":"AND",
   "conditionGroupId":2
 >
],
"actions" : [
 <
   "actionType": "alarm",
   "tagId": null,
   "operator": EQ, 
   "value": null,
   "emailRecipient": null,
   "emailContents": null
 >,
]
>
위 예시에서 <,> 는 딕션너리 형태로 치환해야해.
참고하여 다음 문장을 json 형태로 변경시켜줘.
user: {text}